{"ast":null,"code":"import { feature } from 'topojson-client';\n\n// Convert TopoJSON to GeoJSON for states\nexport const convertTopoToGeoStates = topoData => {\n  if (!topoData) return null;\n  return feature(topoData, topoData.objects.states);\n};\n\n// Convert TopoJSON to GeoJSON for counties\nexport const convertTopoToGeoCounties = topoData => {\n  if (!topoData) return null;\n  return feature(topoData, topoData.objects.counties);\n};","map":{"version":3,"names":["feature","convertTopoToGeoStates","topoData","objects","states","convertTopoToGeoCounties","counties"],"sources":["/Users/brianbrown/Documents/AIDataVizApp/MapData/frontend/src/data/geoUtils.js"],"sourcesContent":["import { feature } from 'topojson-client';\n\n// Convert TopoJSON to GeoJSON for states\nexport const convertTopoToGeoStates = (topoData) => {\n  if (!topoData) return null;\n  return feature(topoData, topoData.objects.states);\n};\n\n// Convert TopoJSON to GeoJSON for counties\nexport const convertTopoToGeoCounties = (topoData) => {\n  if (!topoData) return null;\n  return feature(topoData, topoData.objects.counties);\n}; "],"mappings":"AAAA,SAASA,OAAO,QAAQ,iBAAiB;;AAEzC;AACA,OAAO,MAAMC,sBAAsB,GAAIC,QAAQ,IAAK;EAClD,IAAI,CAACA,QAAQ,EAAE,OAAO,IAAI;EAC1B,OAAOF,OAAO,CAACE,QAAQ,EAAEA,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC;AACnD,CAAC;;AAED;AACA,OAAO,MAAMC,wBAAwB,GAAIH,QAAQ,IAAK;EACpD,IAAI,CAACA,QAAQ,EAAE,OAAO,IAAI;EAC1B,OAAOF,OAAO,CAACE,QAAQ,EAAEA,QAAQ,CAACC,OAAO,CAACG,QAAQ,CAAC;AACrD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}